<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="Ware">
	<resultMap class="com.sinokj.app.good.ware.model.Ware" id="WareResult">
	    <!-- base -->
		<result column="id" property="id" jdbcType="varchar"/>
		<result column="code" property="code" jdbcType="varchar"/>
		<result column="sort" property="sort" jdbcType="int"/>
		<!-- Ware -->
		<result column="good_id" property="goodId" jdbcType="varchar"/>
		<result column="stock" property="stock" jdbcType="int"/>
		<result column="price_discount" property="priceDiscount" jdbcType="decimal"/>
		<result column="groupgood_id" property="groupgoodId" jdbcType="varchar"/>
		<result column="good_val_id" property="goodValId" jdbcType="varchar"/>
		<result column="good_val" property="goodVal" jdbcType="varchar"/>
		<result column="pic" property="pic" jdbcType="varchar"/>
		<result column="pic_id" property="picId" jdbcType="varchar"/>
		<result column="price_market" property="priceMarket" jdbcType="decimal"/>
		<result column="price_shop" property="priceShop" jdbcType="decimal"/>
	</resultMap>
	 <resultMap class="com.sinokj.app.good.ware.model.Ware" id="WareExtendResult" extends="WareResult">
		<result column="good_name" property="goodName" jdbcType="varchar"/>
		<result column="good_type_name" property="goodTypeName" jdbcType="varchar"/>
		<result column="price" property="price" jdbcType="decimal"/>
		<result column="tax_rate" property="taxRate" jdbcType="decimal"/>
		<result column="tax_price" property="taxPrice" jdbcType="decimal"/>
		<result column="purchase_price" property="purchasePrice" jdbcType="decimal"/>
		<result column="average_cost_inventory" property="averageCostInventory" jdbcType="decimal"/>
	</resultMap>
	
	<!-- 缓存模型 -->
	<cacheModel id="Ware_cache" type="LRU" readOnly="false" serialize="true">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Ware.Ware_insert"/>
		<flushOnExecute statement="Ware.Ware_update"/>
		<flushOnExecute statement="Ware.Ware_delete"/>
		<property name="size" value="2000"/>
	</cacheModel> 	
	
	<sql id="Good_query_select_where_clause">
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="id">
				a.id = #id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="goodName">
				b.name like '%$goodName$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="goodTypeName">
				b.good_type_name = #goodTypeName#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="code">
				a.code like '%$code$%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="begin">
				<![CDATA[begin_sale_time >= #begin#]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="end">
				<![CDATA[begin_sale_time <= #end#]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="goodValId">
				a.good_val_id = #goodValId#
			</isNotEmpty>
		</dynamic>		
	</sql>
	<!-- 首页根据wareId查询商品的库存总量 -->
	<select id="Ware_warehousecount_query_ToT" resultClass="java.lang.Integer" cacheModel="Ware_cache">
		select sum(ware_count) from warehouse_ware where ware_id = #id#
	</select>
	
	
	 <select id="Ware_count_query_select" resultClass="java.lang.Integer" cacheModel="Ware_cache">
		select count(*) from ware a left join good b on a.good_id = b.id
		<include refid="Good_query_select_where_clause"/>
	</select>	
	<select id="Ware_query_select" resultMap="WareExtendResult" cacheModel="Ware_cache">
		select a.*,b.name as good_name,b.good_type_name as good_type_name,b.price as price,b.tax_rate as tax_rate,b.tax_price as tax_price,b.purchase_price as purchase_price,
		b.average_cost_inventory as average_cost_inventory
		from ware a left join good b on a.good_id = b.id
			<include refid="Good_query_select_where_clause"/>
		order by id desc
	</select>
	<select id="Ware_specification_select" resultMap="WareResult" cacheModel="Ware_cache">
		select a.*,c.value from ware a, ware_specification_val b, good_specification_val c where a.id = b.ware_id 
		and b.good_specification_val_id = c.id
		and a.good_id = #goodId#
	</select>
	<select id="Ware_select" resultMap="WareResult" cacheModel="Ware_cache">
		select * from ware 
			<dynamic prepend="where">
				<isNotEmpty prepend="and" property="id">
					id = #id#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="code">
					code = #code#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="goodId">
					good_id = #goodId#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="groupgoodId">
					groupgood_id = #groupgoodId#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="goodValId">
					good_val_id = #goodValId#
			</isNotEmpty>
			</dynamic>
		order by sort asc
	</select>
	<!-- 库存成本 -->
	<select id="Ware_good_select" resultClass="java.lang.Double" cacheModel="Ware_cache">
		select good.average_cost_inventory from good where id in 
			(select ware.good_id from ware where id = #id#)
	</select>
	<!-- 根据销售id获取销售货物 -->
	<select id="Ware_sale_good_select" resultMap="WareResult">
		select * from ware where id in (
			select ware_id from sale_ware where sale_id=#saleId#)
	</select>
	<!-- 按照商品的规格查询商品的库存 -->
	<select id="Ware_count_specification_select" resultMap="WareResult"  cacheModel="Ware_cache">
		select * from ware where id in (
			select ware_id from ware_specification_val where good_specification_val_id in (
				select id from good_specification_val where id in 
				<iterate open="(" close=")" conjunction="," property="wareSpecificationValId">
					#wareSpecificationValId[]#
				</iterate>
			) <!--  GROUP BY good_specification_val_id-->
		) and good_id=#goodId#
	</select>
	
	
	<insert id="Ware_insert">
		insert into ware 
			(id,code,good_id,stock,price_discount,sort,groupgood_id,pic,pic_id,good_val,good_val_id,price_market,price_shop)
		values
			(#id#,#code#,#goodId#,#stock#,#priceDiscount#,#sort#,#groupgoodId#,#pic#,#picId#,#goodVal#,#goodValId#,#priceMarket#,#priceShop#)
	</insert>
	
	<update id="Ware_update">
		update ware set
			code = #code#,
			stock = #stock#,
			price_discount = #priceDiscount#,
			sort = #sort#,
			pic = #pic#,
			pic_id = #picId#,
			good_val = #goodVal#,
			good_val_id = #goodValId#,
			price_market=#priceMarket#,
			price_shop=#priceShop#
		where id = #id#
	</update>
	
  <delete id="Ware_delete">
    delete from ware
    where good_id = #goodId#
  </delete>	
  
  <delete id="Ware_groupgood_delete">
    delete from ware
    where groupgood_id = #groupgoodId#
  </delete>	
	
</sqlMap>
